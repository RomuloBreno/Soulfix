@using Soulfix.Controllers;
@using System.Globalization;
@using Soulfix.Metods;
@model List<EventModel>

@{
	ViewData["Title"] = "Agendamentos";

}

<style>
	.div-table > thead > tr > th {
		padding: 10px;
	}

	table {
	}

	.Category-view {
		display: flex;
		grid-auto-columns: fit-content();
	}

	.days {
		margin: 10px;
		padding: 10px;
		margin: 10px;
		min-height: 130px;
		min-width: 150px;
		border: 1px solid black;
		display: flex;
	}

	.thead {
		display: grid;
		grid-template-columns: repeat(7, 1fr);
		grid-template-rows: repeat(5,1fr);
	}

	.month {
		display: grid;
		grid-template-rows: repeat(1,1fr);
	}

	a {
		text-decoration: none;
	}
</style>

<div class="container text-center flex-column ">
	<main role="main" class="pb-3">
		<h1>@ViewData["Title"]</h1>



		<div class="Category-view">


			<br />


			<div class="">
				@{
					DateTime dateNow = DateTime.Now;
					DateTime dateStartMonth = new DateTime(dateNow.Year, dateNow.Month, 1);
					int monthChecked = dateNow.Month;
					int month = 1;
					for (month = 1; month <= 12; month++)
					{
						<h2>
							<a class="btn" role="button">

								@DateTimeFormatInfo.CurrentInfo.GetAbbreviatedMonthName(month)
							</a>
						</h2>
					}

				}
			</div>




			<div class="thead">

				@{

					var DateWithDayEnd = dateStartMonth.AddMonths(monthChecked + 1).AddDays(-1);
					int day;

					for (day = 1; day <= DateWithDayEnd.Day; day++)
					{
						DateTime dateCreate = new DateTime(DateWithDayEnd.Year, DateWithDayEnd.Month, day);

						foreach (var item in Model)
						{
							string dayName = "";
							if (day <= 7)
							{

								dayName = DateTimeFormatInfo.CurrentInfo.GetAbbreviatedDayName(dateCreate.DayOfWeek);
							}





							if (day == 1 && dateCreate.DayOfWeek != DayOfWeek.Sunday)

							{
								int dayOff = 7 - ((int)dateCreate.DayOfWeek);
								for (int i = 7; i > dayOff; i--)
								{

									<div class="days flex-column">

										<div></div>
										<div></div>

									</div>

								}

							}
							else
							{




							}


							<div class="days flex-column">

								<div>@dayName</div>
								<div>@day</div>
								@{
									if (Convert.ToDateTime(item.Date).Day == dateCreate.Day && Convert.ToDateTime(item.Date).Month == dateCreate.Month && Convert.ToDateTime(item.Date).Year == dateCreate.Year)
									{
										//<div class="eventsDay" style="background-color:@item.Category.Color" scope="col">
										//var color = @item.Category.Color;

										<div class="eventsDay" scope="col">
											@item.Name

										</div>
									}

								}
							</div>



						}

					}
				}
			</div>


		</div>

		<br />


	</main>
</div>




